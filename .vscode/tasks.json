{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "build",
            "type": "shell",
            "command": "cargo",
            "args": ["build"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": [
                "$rustc"
            ],
            "detail": "Build the project with cargo"
        },
        {
            "label": "build-release",
            "type": "shell",
            "command": "cargo",
            "args": ["build", "--release"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": [
                "$rustc"
            ],
            "detail": "Build the project in release mode"
        },
        {
            "label": "test",
            "type": "shell",
            "command": "cargo",
            "args": ["test"],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": [
                "$rustc"
            ],
            "detail": "Run all tests"
        },
        {
            "label": "test-verbose",
            "type": "shell",
            "command": "cargo",
            "args": ["test", "--", "--nocapture"],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": [
                "$rustc"
            ],
            "detail": "Run tests with verbose output"
        },
        {
            "label": "clippy",
            "type": "shell",
            "command": "cargo",
            "args": ["clippy", "--all-targets", "--all-features", "--", "-D", "warnings"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": [
                "$rustc"
            ],
            "detail": "Run clippy linter"
        },
        {
            "label": "fmt",
            "type": "shell",
            "command": "cargo",
            "args": ["fmt"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "detail": "Format code with rustfmt"
        },
        {
            "label": "fmt-check",
            "type": "shell",
            "command": "cargo",
            "args": ["fmt", "--check"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "detail": "Check code formatting"
        },
        {
            "label": "check",
            "type": "shell",
            "command": "cargo",
            "args": ["check"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": [
                "$rustc"
            ],
            "detail": "Check code for errors without building"
        },
        {
            "label": "clean",
            "type": "shell",
            "command": "cargo",
            "args": ["clean"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "detail": "Clean build artifacts"
        },
        {
            "label": "doc",
            "type": "shell",
            "command": "cargo",
            "args": ["doc", "--open"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "detail": "Generate and open documentation"
        },
        {
            "label": "install",
            "type": "shell",
            "command": "cargo",
            "args": ["install", "--path", ".", "--force"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "detail": "Install the binary locally"
        },
        {
            "label": "docker-build",
            "type": "shell",
            "command": "docker",
            "args": ["build", "--load", "-t", "zjyo", "."],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "detail": "Build Docker image"
        },
        {
            "label": "docker-test",
            "type": "shell",
            "command": "docker",
            "args": ["run", "--rm", "zjyo", "/test.sh"],
            "group": "test",
            "dependsOn": "docker-build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "detail": "Run tests in Docker container"
        }
    ]
}
